{"version":3,"sources":["utils.js","App.js","index.js"],"names":["getIndex","arr","item","index","forEach","element","idx","JSON","stringify","App","useState","bankData","setBankData","searchResults","setSearchResults","loading","setLoading","dropdownOption","setDropdownOption","searchValue","setSearchValue","activePageNumber","setActivePageNumber","itemsPerPage","setItemsPerPage","currentResults","setCurrentResults","useEffect","a","localStorage","getItem","data","parse","slice","fetch","response","json","bank","setItem","className","style","textAlign","fontSize","margin","id","name","value","onChange","e","target","newBankData","filter","city","toLowerCase","handleDropdownChange","type","placeholder","found","Object","keys","key","toString","includes","handleTextChange","min","parseInt","handleItemsPerPageChange","checked","favourites","favourite","showFavourites","map","cursor","addtoFavourites","activePage","itemsCountPerPage","totalItemsCount","length","pageNumber","pageRangeDisplayed","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9a2160d9.chunk.js","sourcesContent":["export function getIndex(arr, item) {\n  let index = null;\n  arr.forEach((element, idx) => {\n    if (JSON.stringify(element) === JSON.stringify(item)) index = idx;\n  });\n  return index;\n}\n","import React, { useEffect, useState } from \"react\";\nimport Pagination from \"react-js-pagination\";\nimport { getIndex } from \"./utils\";\n\nfunction App() {\n  const [bankData, setBankData] = useState([]);\n  const [searchResults, setSearchResults] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [dropdownOption, setDropdownOption] = useState(\"Mumbai\");\n  const [searchValue, setSearchValue] = useState(\"\");\n  const [activePageNumber, setActivePageNumber] = useState(1);\n  const [itemsPerPage, setItemsPerPage] = useState(10);\n  const [currentResults, setCurrentResults] = useState([]);\n\n  useEffect(() => {\n    (async () => {\n      if (localStorage.getItem(\"bankData\")) {\n        const data = JSON.parse(localStorage.getItem(\"bankData\"));\n        setBankData(data);\n        setSearchResults(data);\n        setCurrentResults(data.slice(0, itemsPerPage));\n      } else {\n        const response = await fetch(\n          \"https://vast-shore-74260.herokuapp.com/banks?city=MUMBAI\",\n        );\n        const data = await response.json();\n        data.forEach((bank) => (bank[\"favourite\"] = false));\n        localStorage.setItem(\"bankData\", JSON.stringify(data));\n        setBankData(data);\n        setSearchResults(data);\n        setCurrentResults(data.slice(0, itemsPerPage));\n      }\n      setLoading(false);\n    })();\n  }, []);\n\n  const handleDropdownChange = (e) => {\n    const { value } = e.target;\n    const newBankData = bankData.filter(\n      (bank) => bank.city.toLowerCase() === value,\n    );\n    setSearchResults(newBankData);\n    setCurrentResults(newBankData.slice(0, itemsPerPage));\n    setDropdownOption(value);\n  };\n\n  const handleTextChange = (e) => {\n    const { value } = e.target;\n    setSearchValue(value);\n    const newBankData = bankData.filter((bank) => {\n      let found = false;\n      Object.keys(bank).forEach((key) => {\n        if (bank[key].toString().toLowerCase().includes(value.toLowerCase()))\n          found = true;\n      });\n      return found;\n    });\n    setSearchResults(newBankData);\n    setCurrentResults(newBankData.slice(0, itemsPerPage));\n  };\n\n  const addtoFavourites = (index, e) => {\n    const { checked } = e.target;\n    const newBankData = [...bankData];\n    newBankData[index].favourite = checked;\n    localStorage.setItem(\"bankData\", JSON.stringify(newBankData));\n    setBankData(newBankData);\n    setSearchResults(newBankData);\n    setCurrentResults(\n      newBankData.slice(\n        activePageNumber * itemsPerPage - itemsPerPage,\n        activePageNumber * itemsPerPage,\n      ),\n    );\n  };\n\n  const showFavourites = (e) => {\n    const { checked } = e.target;\n    if (checked) {\n      const favourites = searchResults.filter((bank) => bank.favourite);\n      setSearchResults(favourites);\n      setCurrentResults(favourites.slice(0, itemsPerPage));\n    } else {\n      setSearchResults(bankData);\n      setCurrentResults(bankData.slice(0, itemsPerPage));\n    }\n  };\n\n  const handleItemsPerPageChange = (e) => {\n    const { value } = e.target;\n    if (value) {\n      setItemsPerPage(parseInt(value));\n      setCurrentResults(searchResults.slice(0, parseInt(value)));\n    }\n  };\n\n  const handlePageChange = (pageNumber) => {\n    setActivePageNumber(pageNumber);\n    setCurrentResults(\n      searchResults.slice(\n        pageNumber * itemsPerPage - itemsPerPage,\n        pageNumber * itemsPerPage,\n      ),\n    );\n  };\n\n  return (\n    <div className=\"App\">\n      <main>\n        <h1 style={{ textAlign: \"center\", fontSize: \"4rem\", margin: \"3rem 0\" }}>\n          Bank Branches\n        </h1>\n        <div id=\"search-options\">\n          <select\n            name=\"city\"\n            id=\"dropdown\"\n            value={dropdownOption}\n            onChange={(e) => handleDropdownChange(e)}>\n            <option value=\"mumbai\">Mumbai</option>\n            <option value=\"delhi\">Delhi</option>\n            <option value=\"bangalore\">Banglore</option>\n            <option value=\"chennai\">Chennai</option>\n            <option value=\"kolkata\">Kolkata</option>\n          </select>\n\n          <input\n            id=\"search-bar\"\n            type=\"text\"\n            placeholder=\"Search\"\n            value={searchValue}\n            onChange={(e) => handleTextChange(e)}\n          />\n\n          <input\n            id=\"items-per-page\"\n            type=\"number\"\n            min=\"1\"\n            placeholder=\"Items per page\"\n            value={itemsPerPage}\n            onChange={(e) => handleItemsPerPageChange(e)}\n          />\n\n          <div id=\"show-favourites\">\n            <input type=\"checkbox\" onChange={(e) => showFavourites(e)} />\n            <label>View Favourites</label>\n          </div>\n        </div>\n\n        {loading ? (\n          <h2>Loading...</h2>\n        ) : (\n          <div id=\"table-container\">\n            <table>\n              <thead>\n                <tr>\n                  <th>IFSC</th>\n                  <th>Bank Id</th>\n                  <th>Branch</th>\n                  <th>Address</th>\n                  <th>City</th>\n                  <th>District</th>\n                  <th>State</th>\n                  <th>Bank Name</th>\n                  <th>Favourite</th>\n                </tr>\n              </thead>\n              <tbody>\n                {currentResults.map((data, index) => {\n                  return (\n                    <tr key={index}>\n                      {Object.keys(data).map((key, idx) => {\n                        if (key === \"favourite\")\n                          return (\n                            <td key={idx}>\n                              <input\n                                className=\"favourite-checkbox\"\n                                type=\"checkbox\"\n                                style={{ cursor: \"pointer\" }}\n                                checked={\n                                  searchResults[getIndex(searchResults, data)][\n                                    key\n                                  ]\n                                }\n                                onChange={(e) =>\n                                  addtoFavourites(\n                                    getIndex(searchResults, data),\n                                    e,\n                                  )\n                                }\n                              />\n                            </td>\n                          );\n                        else return <td key={idx}>{data[key]}</td>;\n                      })}\n                    </tr>\n                  );\n                })}\n              </tbody>\n            </table>\n          </div>\n        )}\n\n        <div id=\"pagination-container\">\n          <Pagination\n            activePage={activePageNumber}\n            itemsCountPerPage={itemsPerPage}\n            totalItemsCount={searchResults.length}\n            onChange={handlePageChange}\n            pageRangeDisplayed={8}\n          />\n        </div>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}